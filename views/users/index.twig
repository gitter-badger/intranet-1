{% extends 'ridi.twig' %}

{% block head %}
  {{ parent() }}
    <style>
      .dropdown-submenu {
        position:relative;
      }

      .dropdown-submenu>.dropdown-menu {
        top:0;left:100%;margin-top:-6px;margin-left:-1px;-webkit-border-radius:0 6px 6px 6px;-moz-border-radius:0 6px 6px 6px;border-radius:0 6px 6px 6px;
      }

      .dropdown-submenu:hover>.dropdown-menu {
        display:block;
      }

      .dropdown-submenu>a:after {
        display:block;content:" ";float:right;width:0;height:0;border-color:transparent;border-style:solid;border-width:5px 0 5px 5px;border-left-color:#cccccc;margin-top:5px;margin-right:-10px;
      }

      .dropdown-submenu:hover>a:after {
        border-left-color:#ffffff;
      }

      .js_user {
        position: absolute;
        padding: 0;
        width: 60px;
        height: 60px;
        color: #fff;
        border: 1px solid;
        border-color: #fff;
        background-color: #337ab7;
        overflow: hidden;
        text-align: center;
        cursor: pointer;
      }

      .js_user .content {
        position: relative;
        top: 50%;
        transform: translateY(-50%);
      }

      #user_map {
        position: relative;
        height: 1000px;
      }

      .modal-content {
        border-radius: 5px;
      }

      .modal-header {
        padding: 10px;
        border-bottom: 0;
      }

      .modal-footer {
        padding: 10px;
        border-top: 0;
      }

      .modal-content-header {
        padding: 10px;
      }

      .modal-content-body {
        margin: auto;
        padding: 10px;
      }

      .dl-horizontal dt {
        text-align: left;
        width: 80px;
      }

      dt {
        font-weight: 300;
        color: #bbb;
      }

      .modal {
        text-align: center;
        padding: 0;
      }

      .modal:before {
        content: '';
        display: inline-block;
        height: 100%;
        vertical-align: middle;
        margin-right: -4px;
      }

      .modal-dialog {
        display: inline-block;
        text-align: left;
        vertical-align: middle;
        width: 300px;
      }

      .dl-horizontal dd {
        margin-left: 80px;
      }
      @media (min-width: 768px) {
        .modal-dialog {
          width: 650px;
        }
      }
    </style>

    <script>
      require(["jquery", "jquery-ui", "bootstrap"], function ($) {
        if (location.search == '?after_login' && window.innerWidth < 980) {
          location.href = '/Rooms';
        }

        var userInfos = {};
        {% for user in users %}
          userInfos[{{ user.uid }}] = {
            name: '{{ user.name }}',
            {% if user.image %}
              image: '{{ user.image }}',
            {% endif %}
            team: '{{ user.team }}',
            email: '{{ user.email }}',
            inner_call: '{{ user.inner_call }}',
            outer_call: '{{ user.outer_call }}',
            position: '{{ user.position }}',
            birth: '{{ user.birth|date('n월 j일') }}'
          };
        {% endfor %}


        $('.nav-tabs li').each(function () {
          if (!$(this).hasClass('active')) {
            var tabTarget = $(this).find('a').attr('href');
            $(tabTarget + ' .js_user').hide();
          }
        });

        $('a[data-toggle=tab]').on('show.bs.tab', function (e) {
          var activated = $(e.target).attr('href');
          var deactivated = $(e.relatedTarget).attr('href');
          $(activated + ' .js_user').show();
          $(deactivated + ' .js_user').hide();
        });

        {% if replaceable %}

          $('.js_user').draggable({
            grid: [20, 20],
            snap: true,
            containment: '#user_map',
            start: function (e, ui) {
              $(this).isDragging = true;
            },
            stop: function (e, ui) {
              $(this).isDragging = false;
              var id = $(this).data('userid');
              var x = parseInt(ui.position.left);
              var y = parseInt(ui.position.top);
              $.post('/users/' + id + '/updateExtra/posX/' + x);
              $.post('/users/' + id + '/updateExtra/posY/' + y);
            }
          });

          $.fn.setContextMenu = function _contextMenu(settings) {
            return this.each(function () {
              $(this).on('contextmenu', function (e) {
                if (e.ctrlKey) {
                  return;
                }

                var $menu = $(settings.menuSelector)
                  .data("invokedOn", $(e.target))
                  .show()
                  .css({
                    position: "absolute",
                    left: getMenuPosition(e.clientX, 'width', 'scrollLeft'),
                    top: getMenuPosition(e.clientY, 'height', 'scrollTop')
                  })
                  .off('click')
                  .on('click', 'a', function (e) {
                    $menu.hide();

                    var $invokedOn = $menu.data("invokedOn");
                    var $selectedMenu = $(e.target);

                    settings.menuSelected.call(this, $invokedOn, $selectedMenu);
                  });

                return false;
              });

              //for menu cancel
              $('body').click(function () {
                $(settings.menuSelector).hide();
              });
            });

            function getMenuPosition(mouse, direction, scrollDir) {
              var win = $(window)[direction](),
                scroll = $(window)[scrollDir](),
                menu = $(settings.menuSelector)[direction](),
                position = mouse + scroll;

              if (mouse + menu > win && menu < mouse)
                position -= menu;

              return position;
            }
          };

          function setUserArea(userId, area) {
            var userElem = $('.js_user[data-userid=' + userId + ']');
            userElem.attr('disabled', true);

            $.post('/users/' + userId + '/updateExtra/area/' + area)
              .done(() => {
                userElem.detach().appendTo('#' + area);
              })
              .fail(() => {
                alert('MoveUserTo: 서버와 통신에 실패했습니다');
              })
              .always(() => {
                userElem.attr('disabled', false);
              })
          }

          function setUserColor(userId, colorCode) {
            var colorCodeUri = encodeURIComponent(colorCode);
            var userElem = $('.js_user[data-userid=' + userId + ']');
            userElem.attr('disabled', true);

            $.post('/users/' + userId + '/updateExtra/color/' + colorCodeUri)
              .done(() => {
                userElem.css('background-color', colorCode);
              })
              .fail(() => {
                alert('MoveUserTo: 서버와 통신에 실패했습니다');
              })
              .always(() => {
                userElem.attr('disabled', false);
              })
          }

          //context menu setting
          $('.js_user').setContextMenu({
            menuSelector: "#userMenu",
            menuSelected: function (invokedOn, selectedMenu) {
              var userId = invokedOn.attr('data-userid');
              var menuIndex = selectedMenu.attr('tabindex');

              if (menuIndex == '0') {
                setUserArea(userId, 'floor10');

              } else if (menuIndex == '1') {
                setUserArea(userId, 'floor11');

              } else {
                var colorCode = selectedMenu.text();
                setUserColor(userId, colorCode);

              }
            }
          });
        {% endif %}

        $('.js_user').on('click', function (e) {
          if ($(this).isDragging) {
            return;
          }

          var userId = $(this).attr('data-userid');

          if (userInfos[userId].image) {
            $('#infoModal img').attr('src', userInfos[userId].image);
          } else {
            $('#infoModal img').attr('src', 'http://placehold.it/300x300');
          }

          $('#infoModal .modal-title').text(userInfos[userId].name);
          $('#team').text(userInfos[userId].team);
          $('#email').text(userInfos[userId].email);
          $('#inner_call').text(userInfos[userId].inner_call);
          $('#outer_call').text(userInfos[userId].outer_call);
          $('#position').text(userInfos[userId].position);
          $('#birth').text(userInfos[userId].birth);
          $('#infoModal').modal();
        });
      });
    </script>

{% endblock %}

{% block body %}
  {% if globalDomain == "ridi.com" %}

      <!-- Modal -->
      <div class="modal fade" id="infoModal" role="dialog">
        <div class="modal-dialog">

          <!-- Modal content-->
          <div class="modal-content">
            <div class="row">
              <div class="col-sm-6 col-md-6 col-lg-6">
                <img class="img-responsive" src="http://placehold.it/300x300">
              </div>
              <div class="col-sm-6 col-md-6 col-lg-6">
                <div class="modal-header">
                  <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                  <div class="modal-content-header">
                    <h4 class="modal-title"></h4>
                  </div>
                  <div class="modal-content-body">
                    <dl class="dl-horizontal">
                      <dt>부서</dt>
                      <dd id="team"></dd>
                      <dt>이메일</dt>
                      <dd id="email"></dd>
                      <dt>내선번호</dt>
                      <dd id="inner_call"></dd>
                      <dt>휴대전화</dt>
                      <dd id="outer_call"></dd>
                      <dt>직무</dt>
                      <dd id="position"></dd>
                      <dt>생일</dt>
                      <dd id="birth"></dd>
                    </dl>
                  </div>
                </div>
                <div class="modal-footer">
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>

      <ul id="userMenu" class="dropdown-menu" role="menu" style="display:none">
        <li class="dropdown-submenu">
          <li class="dropdown-submenu">
            <a tabindex="-1" href="#">위치 옮기기</a>
            <ul class="dropdown-menu">
              <li><a tabindex="0" href="#">10층</a></li>
              <li><a tabindex="1" href="#">11층</a></li>
            </ul>
          </li>
          <li class="dropdown-submenu">
            <a tabindex="-1" href="#">색 바꾸기</a>
            <ul class="dropdown-menu">
              <li><a tabindex="2" href="#"><div class="btn" style="color:#337ab7;">#337ab7</div></a></li>
              <li><a tabindex="3" href="#"><div class="btn" style="color:#5cb85c;">#5cb85c</div></a></li>
              <li><a tabindex="4" href="#"><div class="btn" style="color:#5bc0de;">#5bc0de</div></a></li>
              <li><a tabindex="5" href="#"><div class="btn" style="color:#f0ad4e;">#f0ad4e</div></a></li>
              <li><a tabindex="6" href="#"><div class="btn" style="color:#d9534f;">#d9534f</div></a></li>
            </ul>
          </li>
      </ul>

      <ul class="nav nav-tabs">
          <li class="active"><a data-toggle="tab" href="#floor10">10층</a></li>
          <li><a data-toggle="tab" href="#floor11">11층</a></li>
      </ul>

      <div class="tab-content">
          <div id="user_map">

              <div id="floor10" class="tab-pane fade in active">
                {% for user in users %}
                  {% if user.extra.area is null or user.extra.area == 'floor10' %}
                    {% include 'users/index_user.twig' with {user:user} %}
                  {% endif %}
                {% endfor %}
              </div>

              <div id="floor11" class="tab-pane fade">
                {% for user in users %}
                  {% if user.extra.area == 'floor11' %}
                    {% include 'users/index_user.twig' with {user:user} %}
                  {% endif %}
                {% endfor %}
              </div>

          </div>

      </div>
  {% endif %}
{% endblock %}
