{% extends 'ridi.twig' %}

{% block head %}
  {{ parent() }}
    <style>
      .dropdown-submenu {
        position:relative;
      }

      .dropdown-submenu>.dropdown-menu {
        top:0;left:100%;margin-top:-6px;margin-left:-1px;-webkit-border-radius:0 6px 6px 6px;-moz-border-radius:0 6px 6px 6px;border-radius:0 6px 6px 6px;
      }

      .dropdown-submenu:hover>.dropdown-menu {
        display:block;
      }

      .dropdown-submenu>a:after {
        display:block;content:" ";float:right;width:0;height:0;border-color:transparent;border-style:solid;border-width:5px 0 5px 5px;border-left-color:#cccccc;margin-top:5px;margin-right:-10px;
      }

      .dropdown-submenu:hover>a:after {
        border-left-color:#ffffff;
      }

      .js_user {
        position: absolute;
        padding:0;
        width: 60px;
        height: 100px;
        border-color:#000;
        overflow: hidden;
        text-align: center;
      }

      .js_user_popup {
        position: absolute;
        display: none;
        z-index: 100;
        margin: 10px;
        padding: 5px;
        background-color: white;
        border: 1px dotted #aaa;
      }

      .js_user .content {
        position: absolute;
        top: 0;
        align-content: center;
      }

      .contextmenu_trigger {
        width: 100%;
        height: 100%;
      }

      #user_map {
        position: relative;
        height: 1000px;
      }
    </style>

    <script>
      require(["jquery", "jquery-ui", "bootstrap"], function ($) {
        if (location.search == '?after_login' && window.innerWidth < 980) {
          location.href = '/Rooms';
        }

        //popup ui
        $('.nav-tabs li').each(function () {
          if (!$(this).hasClass('active')) {
            var tabTarget = $(this).find('a').attr('href');
            $(tabTarget + ' .js_user').hide();
          }
        });

        $('a[data-toggle=tab]').on('show.bs.tab', function (e) {
          var activated = $(e.target).attr('href');
          var deactivated = $(e.relatedTarget).attr('href');
          $(activated + ' .js_user').show();
          $(deactivated + ' .js_user').hide();
        });

        $(document).on('mouseover', '.js_user', function (e) {
          var id = $(this).data('userid');
          $('.js_user_popup[data-userid=' + id + ']').show(0);
          e.stopPropagation();
          return false;
        });

        $(document).on('mouseout', '.js_user', function (e) {
          var id = $(this).data('userid');
          $('.js_user_popup[data-userid=' + id + ']').hide(0);
          e.stopPropagation();
          return false;
        });

        $(document).on('mousemove', '.js_user', function (e) {
          var id = $(this).data('userid');
          $('.js_user_popup[data-userid=' + id + ']')
            .css({
              position: "absolute",
              left: e.pageX + 'px',
              top: (e.pageY) + 'px'
            });
          return true;
        });

        {% if replaceable %}

          $('.js_user').draggable({
            snap: true,
            containment: '#user_map',
            stop: function (e, ui) {
              var id = $(this).data('userid');
              var x = parseInt(ui.position.left);
              var y = parseInt(ui.position.top);
              $.post('/users/' + id + '/updateExtra/posX/' + x);
              $.post('/users/' + id + '/updateExtra/posY/' + y);
            }
          });

          $('.js_user').resizable({
            grid: 10,
            maxHeight: 240,
            maxWidth: 240,
            minHeight: 20,
            minWidth: 40,
            stop: function (e, ui) {
              var id = $(this).data('userid');
              var w = parseInt(ui.size.width);
              var h = parseInt(ui.size.height);
              $.post('/users/' + id + '/updateExtra/width/' + w);
              $.post('/users/' + id + '/updateExtra/height/' + h);
            }
          });

          $.fn.setContextMenu = function _contextMenu(settings) {
            return this.each(function () {
              $(this).on('contextmenu', function (e) {
                if (e.ctrlKey) {
                  return;
                }

                var $menu = $(settings.menuSelector)
                  .data("invokedOn", $(e.target))
                  .show()
                  .css({
                    position: "absolute",
                    left: getMenuPosition(e.clientX, 'width', 'scrollLeft'),
                    top: getMenuPosition(e.clientY, 'height', 'scrollTop')
                  })
                  .off('click')
                  .on('click', 'a', function (e) {
                    $menu.hide();

                    var $invokedOn = $menu.data("invokedOn");
                    var $selectedMenu = $(e.target);

                    settings.menuSelected.call(this, $invokedOn, $selectedMenu);
                  });

                return false;
              });

              //for menu cancel
              $('body').click(function () {
                $(settings.menuSelector).hide();
              });
            });

            function getMenuPosition(mouse, direction, scrollDir) {
              var win = $(window)[direction](),
                scroll = $(window)[scrollDir](),
                menu = $(settings.menuSelector)[direction](),
                position = mouse + scroll;

              if (mouse + menu > win && menu < mouse)
                position -= menu;

              return position;
            }
          };

          function setUserArea(userId, area) {
            var userElem = $('.js_user[data-userid=' + userId + ']');
            userElem.attr('disabled', true);

            $.post('/users/' + userId + '/updateExtra/area/' + area)
              .done(() => {
                userElem.detach().appendTo('#' + area);
              })
              .fail(() => {
                alert('MoveUserTo: 서버와 통신에 실패했습니다');
              })
              .always(() => {
                userElem.attr('disabled', false);
              })
          }

          function setUserColor(userId, colorCode) {
            var colorCodeUri = encodeURIComponent(colorCode);
            var userElem = $('.js_user[data-userid=' + userId + ']');
            userElem.attr('disabled', true);

            $.post('/users/' + userId + '/updateExtra/color/' + colorCodeUri)
              .done(() => {
                userElem.css('background-color', colorCode);
              })
              .fail(() => {
                alert('MoveUserTo: 서버와 통신에 실패했습니다');
              })
              .always(() => {
                userElem.attr('disabled', false);
              })
          }

          //context menu setting
          $('div.contextmenu_trigger').setContextMenu({
            menuSelector: "#userMenu",
            menuSelected: function (invokedOn, selectedMenu) {
              var userId = invokedOn.attr('data-userid');
              var menuIndex = selectedMenu.attr('tabindex');

              if (menuIndex == '0') {
                setUserArea(userId, 'floor10');

              } else if (menuIndex == '1') {
                setUserArea(userId, 'floor11');

              } else {
                var colorCode = selectedMenu.text();
                setUserColor(userId, colorCode);

              }
            }
          });
        {% endif %}
      });
    </script>

{% endblock %}

{% block body %}
  {% if globalDomain == "ridi.com" %}
      <ul id="userMenu" class="dropdown-menu" role="menu" style="display:none">
        <li class="dropdown-submenu">
          <li class="dropdown-submenu">
            <a tabindex="-1" href="#">위치 옮기기</a>
            <ul class="dropdown-menu">
              <li><a tabindex="0" href="#">10층</a></li>
              <li><a tabindex="1" href="#">11층</a></li>
            </ul>
          </li>
          <li class="dropdown-submenu">
            <a tabindex="-1" href="#">색 바꾸기</a>
            <ul class="dropdown-menu">
              <li><a tabindex="2" href="#"><div class="btn" style="color:#337ab7;">#337ab7</div></a></li>
              <li><a tabindex="3" href="#"><div class="btn" style="color:#5cb85c;">#5cb85c</div></a></li>
              <li><a tabindex="4" href="#"><div class="btn" style="color:#5bc0de;">#5bc0de</div></a></li>
              <li><a tabindex="5" href="#"><div class="btn" style="color:#f0ad4e;">#f0ad4e</div></a></li>
              <li><a tabindex="6" href="#"><div class="btn" style="color:#d9534f;">#d9534f</div></a></li>
            </ul>
          </li>
      </ul>

      {% for user in users %}
          <div class='js_user_popup' data-userid='{{ user.uid }}'>
            <div>{{ user.name }} <sub>{{ user.id }}@{{ globalDomain }}</sub></div>
            {% if user.outer_call %}
              <div><strong>외선</strong> {{ user.outer_call }}</div>
            {% endif %}
            {% if user.inner_call %}
              <div><strong>내선</strong> {{ user.inner_call }}</div>
            {% endif %}
            <div><strong>긴급</strong> {{ user.mobile }}</div>
            <div>{{ user.comment }}</div>
          </div>
      {% endfor %}

      <ul class="nav nav-tabs">
          <li class="active"><a data-toggle="tab" href="#floor10">10층</a></li>
          <li><a data-toggle="tab" href="#floor11">11층</a></li>
      </ul>

      <div class="tab-content">
          <div id="user_map">

              <div id="floor10" class="tab-pane fade in active">
                {% for user in users %}
                  {% if user.extra.area is null or user.extra.area == 'floor10' %}
                    {% include 'users/index_user.twig' with {user:user} %}
                  {% endif %}
                {% endfor %}
              </div>

              <div id="floor11" class="tab-pane fade">
                {% for user in users %}
                  {% if user.extra.area == 'floor11' %}
                    {% include 'users/index_user.twig' with {user:user} %}
                  {% endif %}
                {% endfor %}
              </div>

          </div>

      </div>
  {% endif %}
{% endblock %}
